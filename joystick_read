
*********************************	
* 3 POINT JOYSTICK READ		*
* VERTICAL= DOWN/ CTR/ UP	*
* HORIZONTAL= LEFT/ CTR/ RIGHT	*
* BY PAUL THAYER		*
*********************************
*********************************
* SEE BASIC CODE BELOW ASM	*
*********************************
dac			equ	$ff23
axis_register		equ	$ff01
x_axis_value		equ	$f7
y_axis_value		equ	$08
pia_write		equ	$ff20
pia_read		equ	$ff00
left_value		equ	$2c
right_value		equ	$d0
up_value		equ	$2c
down_value		equ	$d0
left_flag		equ	1
right_flag		equ	2
up_flag			equ	4
down_flag		equ	8
sound_disable		equ	$f7

joy.in			lda	dac			;disable sound
			anda	#sound_disable
			sta	dac
			
			lda	axis_register		;switch to X axis - note this also disables sound
			anda	#x_axis_value
			sta	axis_register
			
			nop				;delay for axis switch
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			
			clrb				;clear joystick output value
			lda	#left_value		;load left voltage value to check
			sta	pia_write		;write value to PIA
			lda	pia_read		;read result from PIA
			bmi	h.joy			;check for right if not left
			orb	#left_flag		;set bit flag for left
			bra	v.joy			;now check vertical axis
			
h.joy			lda	#right_value		;load right voltage value to check
			sta	pia_write		;write value to PIA
			lda	pia_read		;read result from PIA
			bpl	v.joy			;do vertical axis if in dead zone
			orb	#right_flag		;set bit flag for right

v.joy			lda	axis_register		;switch to Y axis
			ora	#y_axis_value
			sta	axis_register
			
			nop				;delay for axis switch
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			nop
			
			lda	#up_value		;load up voltage value to check
			sta	pia_write		;write value to PIA
			lda	pia_read		;read result from PIA
			bmi	v.joy0			;check for down if not up
			orb	#up_flag		;set bit flag for up
			bra	joy.set			;save output to variable and exit
			
v.joy0			lda	#down_value		;load downvoltage value to check
			sta	pia_write		;write value to PIA
			lda	pia_read		;read result from PIA
			bpl	joy.set			;save output to variable and exit
			orb	#down_flag		;set bit flag for down

joy.set			stb	joy.out			;save output to variable
			rts				;exit
			
*********************************
* BASIC CODE			*
*********************************
*********************************
* VERTICAL JOYSTICK READ	*
*********************************
B=JOYSTK(1)
IF B<24 THEN JV=2 ELSE IF B>39 THEN JV=1 ELSE JV=0

*********************************
* HORIZONTAL JOYSTICK READ	*
*********************************
B=JOYSTK(0)
IF B<24 THEN JH=2 ELSE IF B>39 THEN JH=1 ELSE JH=0
